akka {
  loglevel = DEBUG

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
  }

}


# Configuration for akka-persistence-cassandra
akka.persistence.cassandra {
  events-by-tag {
    bucket-size = "Day"
    # for reduced latency
    eventual-consistency-delay = 200ms
    flush-interval = 50ms
    pubsub-notification = on
    first-time-bucket = "20200115T00:00"
  }

  query {
    refresh-interval = 2s
  }


  # how will this be handled in our env?
  journal.class = "akka.persistence.cassandra.journal.CassandraJournal"
  journal.keyspace = "bankAccount"
  journal.keyspace-autocreate = on
  journal.tables-autocreate = on

  snapshot.class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"
  snapshot.keyspace = "bankAccount"
  snapshot.keyspace-autocreate = on
  snapshot.tables-autocreate = on
}

datastax-java-driver {
  advanced.reconnect-on-init = on
  basic.load-balancing-policy.local-datacenter = datacenter1
}

akka.actor.allow-java-serialization = on
akka.actor.enable-additional-serialization-bindings = on

event-processor {
  tag-prefix = "account"       // even processor tag prefix
  parallelism = 4                  // number of event processors
}